{"name": "test_tpmcreate[chromium]", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\nwaiting for get_by_title(\"市场风险\")", "trace": "page = <Page url='http://192.168.252.91:8083/xweb-document/micro/doc/#/doc-rpt-tmpl?fBh=DOC_RPT_TMPL&TABNAME=%E6%8A%A5%E5%91%8A%E6%A8%A1%E6%9D%BF'>\n\n    @pytest.mark.run(order=1)\n    def test_tpmcreate(page: Page) -> None:\n        test_login.userlogin(page, \"shanghai\", \"1\")\n        page.wait_for_selector(\"#leftMenuId_DOC_MODULE > span\")\n        page.click(\"#leftMenuId_DOC_MODULE > span\")\n        page.get_by_text(\"报告管理\").click()\n        page.get_by_text(\"报告模板\").click()\n        page.get_by_role(\"button\", name=\"创 建\").click()\n        page.get_by_label(\"创建模板\").locator(\"input[type=\\\"text\\\"]\").click()\n        tmp_title = \"回归测试-模板创建\"+time.strftime(\"%Y%m%d%H%M%S\")\n        print(tmp_title)\n        page.get_by_label(\"创建模板\").locator(\"input[type=\\\"text\\\"]\").fill(tmp_title)\n        page.get_by_label(\"创建模板\").locator(\"textarea\").click()\n        page.get_by_label(\"创建模板\").locator(\"textarea\").fill(\"回归测试-模板描述添加1143\")\n        page.get_by_label(\"创建模板\").locator(\"#periodType div\").nth(3).click()\n        page.get_by_title(\"月度\").click()\n        page.locator(\"#rc_select_19\").click()\n>       page.get_by_title(\"市场风险\").click()\n\ntestcases\\test_tmpcreate.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:15093: in click\n    self._sync(\nvenv\\lib\\site-packages\\playwright\\_impl\\_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\nvenv\\lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001D3A2335820>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001D3A22B5EE0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nE           Call log:\nE           waiting for get_by_title(\"市场风险\")\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:514: TargetClosedError"}, "parameters": [{"name": "browser_name", "value": "'chromium'"}], "start": 1722853175398, "stop": 1722853199001, "uuid": "4ccac1cb-ee88-4e97-94bd-6a411bb0c2a4", "historyId": "23672f1d53301d9f1d254a8b2bbbbb1a", "testCaseId": "5a40b6e717ed4e156d8c57f9c496d2cd", "fullName": "testcases.test_tmpcreate#test_tpmcreate", "labels": [{"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_tmpcreate"}, {"name": "host", "value": "LAPTOP-KLOGU98I"}, {"name": "thread", "value": "8200-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_tmpcreate"}]}